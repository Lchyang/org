* 操作系统基础
** 操作系统逻辑结构 
*** 操作系统逻辑结构
**** 整体式结构
***** 模块为基本单位
****** 特点
 模块设计，编码调试独立
 模块调度自由
 模块通信已全局变量形式完成
****** 缺点
 信息传递随意，维护更新困难

**** 层次结构
**** 微内核结构
*** cpu 的态 
 cpu 的工作状态
 对资源和指令使用权限的描述
**** 核态
 权限最高的态
**** 用户态
 仅能访问部分资源
 用户程序
**** 管态
 介于核态和用户态之间
*** 中断机制
cpu 收到外部信号后，停止当前工作，转去处理外部事件，处理完毕后回到
原来工作的中断处继续原来的工作。
**** 引入中断机制的目的
实现并发活动
实现实时处理
故障自动处理
** 操作系统用户界面
*** 操作系统启动过程
**** 实模式（real mode)
**** 保护模式（protect mode)
*** 操作系统的生成
满足特定硬件环境和用户需要，组装和构建操作系统过程。
1. 根据硬件环境/用户要求配置功能模块和构造参数
2. 构建 os 镜像
*** 操作系统生成的前提
可拆装模块构成
交互式配置工具
有映像构建工具
*** 用户界面
os 提供给用户控制计算机的机制，又称用户接口。
**** 图形界面
**** 键盘命令（command）
普通命令
批处理程序
shell
** 进程管理
*** 进程概念
进程是程序在某个数据集合上的一次运行活动。
数据集合：软硬件环境，多个进程共存、共享的环境
**** 特征
动态性
并发性
异步性
独立性
**** 进程与程序的区别
进程是动态的：程序的一次执行过程
程序是静态的：一组指令的有序集合

进程是暂存的：在内存驻留
程序是长存的：在介质上长存
**** 进程的分类
按资源的权限
系统进程：指系统内核相关进程
用户进程：运行在用户态的进程

按 cpu 的依赖性
偏 CPU 进程；计算型进程
偏 i/o 进程：侧重 i/o 的进程
**** 进程的状态
运行状态：进程已经占有 cpu，在 CPU 上运行

就绪状态：具备运行条件，暂时不能运行

阻塞状态(wait/block):
因为等待某项服务完成或信号不能运行状态
如等待：系统调用，i/o 操作，合作进程信号。

linux

就绪态
阻塞态：浅度阻塞、深度阻塞
僵死态：
挂起态:
**** 进程的描述
***** 进程控制块
描述进程状态、资源、和相关进程关系的数据结构
pcb 是进程标志
创建进程时创建 pcb；进程撤销后 pcb 同时撤销

*** 进程控制
进程生命全期间，对齐全部行为的控制
创建、阻塞、撤销、唤醒。
*** 线程
**** 线程的概念
线程是可由CPU直接运行的实体。
一个进程可以创建多个线程
多个线程共享CPU可以实现并发：
*** 临界区锁
*** 同步和 p-v 操作
*** window 和 linux 同步机制
*** 进程通信

** 死锁
** 进程调度

